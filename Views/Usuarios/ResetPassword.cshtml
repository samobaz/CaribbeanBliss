@* Views/Usuarios/ResetPassword.cshtml *@
@model ResetPasswordModel
@{
    ViewData["Title"] = "Index";
    Layout = null;

}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Restablecer Contraseña - Caribbean2</title>
    
    <!-- Bootstrap & CSS -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    
    <style>
        body {
            background-color: #f8f9fa;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .text-danger {
            color: #dc3545 !important;
            margin-top: 0.25rem;
            font-size: 0.875rem;
            display: block;
        }

        .input-field.input-validation-error {
            border-color: #dc3545;
        }

        .reset-password-container {
            max-width: 400px;
            margin: 2rem auto;
            padding: 2rem;
            background: white;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .input-box {
            margin-bottom: 1.5rem;
            position: relative;
        }

        .input-field {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            transition: border-color 0.3s;
        }

        .input-field.error {
            border-color: #dc3545;
        }

        .validation-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            min-height: 20px;
            transition: all 0.3s ease;
        }

        .password-requirements {
            margin: 1rem 0;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 4px;
        }

        .password-requirements ul {
            list-style: none;
            padding-left: 0;
            margin: 0;
        }

        .password-requirements li {
            color: #dc3545;
            margin: 0.25rem 0;
            padding-left: 20px;
            position: relative;
        }

        .password-requirements li.valid {
            color: #198754;
        }

        .password-requirements li::before {
            content: '✕';
            position: absolute;
            left: 0;
            color: #dc3545;
        }

        .password-requirements li.valid::before {
            content: '✓';
            color: #198754;
        }

        .submit {
            width: 100%;
            padding: 0.75rem;
            background: #0d6efd;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .submit:hover {
            background: #0b5ed7;
        }

        .error {
            border-color: #dc3545 !important;
            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
        }
    </style>
</head>
<body>
    <div class="reset-password-container">
        <h2>Restablecer Contraseña</h2>
        
        <div class="password-requirements">
            <p>La contraseña debe tener:</p>
            <ul>
                <li id="length">8-15 caracteres</li>
                <li id="alphanumeric">Solo letras y números</li>
                <li id="match">Las contraseñas deben coincidir</li>
            </ul>
        </div>

        <form id="resetPasswordForm">
            @Html.AntiForgeryToken()
            <input type="hidden" name="Token" value="@ViewBag.Token" />
            <input type="hidden" name="Email" value="@ViewBag.Email" />
            
            <div class="input-box">
                <input type="password" 
                       id="NewPassword"
                       name="NewPassword"
                       class="input-field" 
                       placeholder="Nueva Contraseña" 
                       required>
                <span class="validation-message"></span>
            </div>

            <div class="input-box">
                <input type="password" 
                       id="ConfirmPassword"
                       name="ConfirmPassword"
                       class="input-field" 
                       placeholder="Confirmar Contraseña" 
                       required>
                <span class="validation-message"></span>
            </div>
            
            <div class="input-box">
                <button type="submit" class="submit">Cambiar Contraseña</button>
            </div>
        </form>
    </div>

    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    
    <script>
        $(document).ready(function() {
            const form = $('#resetPasswordForm');
            const password = $('#NewPassword');
            const confirm = $('#ConfirmPassword');
            
            function validatePassword() {
                const value = password.val();
                const lengthValid = value.length >= 8 && value.length <= 15;
                const alphanumericValid = /^[a-zA-Z0-9]+$/.test(value);
                
                $('#length').toggleClass('valid', lengthValid);
                $('#alphanumeric').toggleClass('valid', alphanumericValid);
                
                return lengthValid && alphanumericValid;
            }
            
            function validateConfirm() {
                const isValid = password.val() === confirm.val();
                $('#match').toggleClass('valid', isValid);
                return isValid;
            }
            
            password.on('input', function() {
                validatePassword();
                validateConfirm();
            });
            
            confirm.on('input', validateConfirm);
            
            form.on('submit', function(e) {
                e.preventDefault();
                
                if (!validatePassword()) {
                    Swal.fire({
                        title: 'Error',
                        text: 'La contraseña debe tener entre 8-15 caracteres y solo letras y números',
                        icon: 'error'
                    });
                    return;
                }
                
                if (!validateConfirm()) {
                    Swal.fire({
                        title: 'Error',
                        text: 'Las contraseñas no coinciden',
                        icon: 'error'
                    });
                    return;
                }
                
                const formData = {
                    Token: $('input[name="Token"]').val(),
                    Email: $('input[name="Email"]').val(),
                    NewPassword: password.val(),
                    ConfirmPassword: confirm.val()
                };
                
                $.ajax({
                    url: '@Url.Action("ResetPassword", "Usuarios")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            Swal.fire({
                                title: '¡Éxito!',
                                text: 'Contraseña actualizada correctamente',
                                icon: 'success'
                            }).then(() => {
                                window.location.href = '@Url.Action("Index", "Caribbean")';
                            });
                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: response.message,
                                icon: 'error'
                            });
                        }
                    },
                    error: function() {
                        Swal.fire({
                            title: 'Error',
                            text: 'Error al procesar la solicitud',
                            icon: 'error'
                        });
                    }
                });
            });
        });
    </script>
</body>
</html>
