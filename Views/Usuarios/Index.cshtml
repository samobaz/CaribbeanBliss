@model PaginatedList<Caribbean2.Models.Usuarios>

@{
    ViewData["Title"] = "Usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Add these in the head section -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css">
<script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>

<div class="reservation-container">
    <div class="container">
        <h1 class="text-center mb-4" style="color: #ffffff; font-family: 'Playfair Display', serif;">
            Gestión de Usuarios
        </h1>
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h2 class="card-title mb-0">Usuarios</h2>
                <div class="d-flex align-items-center gap-3">
                    @* <form asp-action="Index" method="get" class="search-form">
                        <div class="input-group">
                            <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" 
                                   class="form-control" placeholder="Buscar usuarios">
                            <button class="btn btn-outline-primary" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </form> *@
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Crear Nuevo Usuario
                    </a>
                </div>
            </div>
            <!-- Update the table section -->
            <div class="card-body">
                <div class="table-responsive">
                    <table id="usuariosTable" class="table table-striped table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>Nombre</th>
                                <th>@Html.DisplayNameFor(model => model[0].TipoIdentificacion)</th>
                                <th>@Html.DisplayNameFor(model => model[0].Identificacion)</th>
                                <th>@Html.DisplayNameFor(model => model[0].Telefono)</th>
                                <th>@Html.DisplayNameFor(model => model[0].Estado)</th>
                                <th>@Html.DisplayNameFor(model => model[0].IdRol)</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model) {
                                <tr>
                                    <td data-label="Nombre">@Html.DisplayFor(modelItem => item.NombresApellidos)</td>
                                    <td data-label="Tipo Identificación">@Html.DisplayFor(modelItem => item.TipoIdentificacion)</td>
                                    <td data-label="Identificación">@Html.DisplayFor(modelItem => item.Identificacion)</td>
                                    <td data-label="Teléfono">@Html.DisplayFor(modelItem => item.Telefono)</td>
                                    <td data-label="Estado">
                                        <div class="status-indicator">
                                            <span class="status-dot @(item.Estado ? "active" : "inactive")"
                                                  title="@(item.Estado ? "Activo" : "Inactivo")">
                                            </span>
                                        </div>
                                    </td>
                                    <td data-label="Rol">@Html.DisplayFor(modelItem => item.IdRol)</td>
                                    <td data-label="Acciones">
                                        <div class="btn-group">
                                            <a asp-action="Edit" asp-route-id="@item.UsuarioID" class="btn btn-sm btn-warning">
                                                <i class="fas fa-pencil-alt"></i>
                                            </a>
                                            <a asp-action="Details" asp-route-id="@item.UsuarioID" class="btn btn-sm btn-info">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.UsuarioID" class="btn btn-sm btn-danger">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Remove the existing pagination -->

    </div>
</div>

<style>
body {
    position: relative;
    min-height: 100vh;
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url('/img/imgpagina.jpg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    opacity: 0.; /* Reduced opacity for darker effect */
    z-index: -1;
    filter: brightness(0.5) contrast(1.2); /* Reduced brightness for darker image */
    backdrop-filter: blur(1px);
    -webkit-backdrop-filter: blur(1px);
    background-color: rgba(0, 0, 0, 0.5); /* Dark overlay */
}

.reservation-container {
    position: relative;
    z-index: 1;
 
    padding: 2rem 0;
}

.card {
    border: none;
    box-shadow: 0 0 20px rgba(0,0,0,0.08);
    border-radius: 15px;
    overflow: hidden;
}

.card-header {
    background: linear-gradient(135deg, #1e3d59 0%, #2b5278 100%);
    padding: 1.5rem;
    border: none;
}

.card-header h2 {
    color: white;
    font-family: 'Playfair Display', serif;
    font-size: 1.8rem;
}

.search-form {
    min-width: 300px;
}

.btn-primary {
    background: #111141;
    border: none;
    padding: 0.6rem 1.2rem;
    border-radius: 8px;
    transition: all 0.3s ease;
}

.btn-primary:hover {
    background: #072468;
    transform: translateY(-2px);
}

.table {
    width: 100%;
    margin-bottom: 0;
}

.table thead th {
    background: #f1f4f8;
    color: #1e3d59;
    font-weight: 600;
    text-transform: uppercase;
    font-size: 0.85rem;
    letter-spacing: 0.5px;
    padding: 1rem;
    border: none;
}

.table tbody tr {
    transition: all 0.3s ease;
}

.table tbody tr:hover {
    background-color: #f8f9fa;
    transform: scale(1.01);
}

.table td {
    white-space: nowrap;
    padding: 1rem;
    vertical-align: middle;
    color: #495057;
    border-color: #f1f4f8;
}

.btn-sm {
    padding: 0.4rem 0.8rem;
    margin: 0 0.2rem;
    border-radius: 6px;
}

.btn-warning {
    background: #ffc13b;
    border: none;
    color: #fff;
}

.btn-info {
    background: #17a2b8;
    border: none;
    color: #fff;
}

.btn-danger {
    background: #dc3545;
    border: none;
}

.status-indicator {
    display: flex;
    justify-content: center;
    align-items: center;
}

.status-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    display: inline-block;
}

.status-dot.active {
    background-color: #198754;
    box-shadow: 0 0 5px #198754;
}

.status-dot.inactive {
    background-color: #dc3545;
    box-shadow: 0 0 5px #dc3545;
}

.pagination {
    margin-bottom: 0;
}

.page-link {
    padding: 0.5rem 0.75rem;
    color: #1e3d59;
    background-color: #fff;
    border: 1px solid #dee2e6;
}

.page-item.active .page-link {
    background-color: #1e3d59;
    border-color: #1e3d59;
    color: white;
}

.page-item.disabled .page-link {
    color: #6c757d;
    pointer-events: none;
    background-color: #fff;
    border-color: #dee2e6;
}

.table-responsive {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    margin-bottom: 1rem;
    border-radius: 8px;
}

/* Add smooth scrollbar styling */
.table-responsive::-webkit-scrollbar {
    height: 8px;
}

.table-responsive::-webkit-scrollbar-track {
    background: #f1f4f8;
    border-radius: 4px;
}

.table-responsive::-webkit-scrollbar-thumb {
    background: #1e3d59;
    border-radius: 4px;
}

.table-responsive::-webkit-scrollbar-thumb:hover {
    background: #2b5278;
}

@@media (max-width: 768px) {
    .card-header {
        flex-direction: column;
        gap: 1rem;
    }
    
    .search-form {
        width: 100%;
        min-width: auto;
    }
    
    .btn-primary {
        width: 100%;
    }
    
    .table td {
        padding: 0.75rem;
    }
}

/* Ajustes para tablas responsivas */
@@media (max-width: 992px) {
    .table {
        display: block;
    }
    
    .table thead {
        display: none; /* Oculta los encabezados en móviles */
    }
    
    .table tbody tr {
        display: block;
        margin-bottom: 1rem;
        border: 1px solid #dee2e6;
        border-radius: 8px;
    }
    
    .table tbody td {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem;
        border: none;
        border-bottom: 1px solid #dee2e6;
    }
    
    .table tbody td:before {
        content: attr(data-label);
        font-weight: 600;
        margin-right: 1rem;
    }
    
    .table tbody td:last-child {
        border-bottom: none;
    }
    
    .btn-group {
        display: flex;
        justify-content: flex-end;
        width: 100%;
    }
}

/* Add DataTables custom styling */
.dataTables_wrapper .dataTables_length select {
    border-radius: 8px;
    padding: 5px;
    border: 1px solid #dee2e6;
}

.dataTables_wrapper .dataTables_filter input {
    border-radius: 8px;
    padding: 5px 10px;
    border: 1px solid #dee2e6;
    margin-left: 5px;
}

.dataTables_wrapper .dataTables_info {
    color: #6c757d;
}

.dataTables_wrapper .dataTables_paginate .paginate_button {
    padding: 0.5rem 0.75rem;
    margin: 0 2px;
    border-radius: 8px;
    border: 1px solid #dee2e6;
}

.dataTables_wrapper .dataTables_paginate .paginate_button.current {
    background: #1e3d59 !important;
    color: white !important;
    border: 1px solid #1e3d59;
}

.dataTables_wrapper .dataTables_paginate .paginate_button:hover {
    background: #2b5278 !important;
    color: white !important;
    border: 1px solid #2b5278;
}
</style>

<script>
$(document).ready(function() {
    $('.toggle-status').change(function() {
        const checkbox = $(this);
        const userId = checkbox.data('id');
        const newStatus = checkbox.prop('checked');
        
        // Revert the checkbox state until confirmed
        checkbox.prop('checked', !newStatus);
        
        Swal.fire({
            title: '¿Estás seguro?',
            text: `¿Deseas cambiar el estado del usuario a ${newStatus ? 'Activo' : 'Inactivo'}?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sí, cambiar',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("ToggleStatus", "Usuarios")',
                    type: 'POST',
                    data: { 
                        id: userId,
                        status: newStatus
                    },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            checkbox.prop('checked', newStatus);
                            $(checkbox).siblings('label').text(newStatus ? 'Activo' : 'Inactivo');
                            Swal.fire(
                                '¡Actualizado!',
                                'El estado ha sido actualizado.',
                                'success'
                            );
                        } else {
                            Swal.fire(
                                'Error',
                                response.message,
                                'error'
                            );
                        }
                    },
                    error: function() {
                        Swal.fire(
                            'Error',
                            'No se pudo actualizar el estado',
                            'error'
                        );
                    }
                });
            }
        });
    });

    $('#logoutButton').click(function(e) {
        e.preventDefault();
        Swal.fire({
            title: '¿Estás seguro?',
            text: "¿Deseas cerrar sesión?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sí, cerrar sesión',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '@Url.Action("Logout", "Usuarios")';
            }
        });
    });

    $('#usuariosTable').DataTable({
        language: {
            "sProcessing":     "Procesando...",
            "sLengthMenu":     "Mostrar _MENU_ registros",
            "sZeroRecords":    "No se encontraron resultados",
            "sEmptyTable":     "Ningún dato disponible en esta tabla",
            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
            "sInfoPostFix":    "",
            "sSearch":         "Buscar:",
            "sUrl":           "",
            "sInfoThousands":  ",",
            "sLoadingRecords": "Cargando...",
            "oPaginate": {
                "sFirst":    "Primero",
                "sLast":     "Último",
                "sNext":     "Siguiente",
                "sPrevious": "Anterior"
            },
            "oAria": {
                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
            }
        },
        responsive: true,
        dom: '<"top"lf>rt<"bottom"ip><"clear">',
        pageLength: 10,
        order: [[0, 'asc']],
        columnDefs: [
            { orderable: false, targets: -1 } // Disable sorting on actions column
        ]
    });
});
</script>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#usuariosTable').DataTable({
                language: {
                    url: "//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json"
                },
                pageLength: 5,
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "Todos"]],
                responsive: true,
                dom: '<"top"lf>rt<"bottom"ip><"clear">',
                columnDefs: [
                    { orderable: false, targets: -1 } // Disable sorting on actions column
                ]
            });

            // Keep existing toggle status and logout functionality
            $('.toggle-status').change(function() {
                // ... existing toggle status code ...
            });

            $('#logoutButton').click(function(e) {
                // ... existing logout code ...
            });
        });
    </script>
}