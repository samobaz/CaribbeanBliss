@model Caribbean2.Models.Reserva
@{
    ViewData["Title"] = "Crear Reserva";
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <!-- Mantener los mismos CSS y meta tags -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crear Reserva</title>
    
    <!-- CSS -->
    <link rel="stylesheet" href="~/css/sideBar.css">
    <link rel="stylesheet" href="~/css/roles.css">
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/menuCentral.css">
    <link rel="stylesheet" href="~/css/Reservas.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css" rel="stylesheet">
    
    <!-- Mantener los mismos estilos -->
    <style>
        /* Copiar todos los estilos de Create2 */
        body {
            position: relative;
            min-height: 100vh;
        }

        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('/img/imgpagina.jpg');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            opacity: 0.; /* Reduced opacity for darker effect */
            z-index: -1;
            filter: brightness(0.5) contrast(1.2); /* Reduced brightness for darker image */
            backdrop-filter: blur(1px);
            -webkit-backdrop-filter: blur(1px);
            background-color: rgba(0, 0, 0, 0.5); /* Dark overlay */
        }   
        .booking-header {
            background: linear-gradient(rgba(30, 61, 89, 0.9), rgba(30, 61, 89, 0.9)),
                        url('/images/hotel-bg.jpg') center/cover;
            color: white;
            padding: 3rem 0;
            margin-bottom: 2rem;
            border-radius: 10px;
        }

        .roles-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 0 20px rgba(0,0,0,0.08);
            overflow: hidden;
        }

        .roles-card-header {
            background: linear-gradient(135deg, #1e3d59 0%, #2b5278 100%);
            padding: 1.5rem;
            border: none;
        }

        .roles-card-title {
            color: white;
            font-family: 'Playfair Display', serif;
            margin: 0;
        }

        .form-control {
            border: 2px solid #f1f4f8;
            border-radius: 8px;
            padding: 0.75rem;
            margin-bottom: 1rem;
        }

        .form-control:focus {
            border-color: #1e3d59;
            box-shadow: 0 0 0 0.2rem rgba(30, 61, 89, 0.25);
        }

        .btn-primary {
            background: #ff6e40;
            border: none;
            padding: 0.6rem 1.2rem;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            background: #ff5722;
            transform: translateY(-2px);
        }

        .selected-guests {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-top: 0.5rem;
        }

        .guest-tag {
            background-color: #e9ecef;
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 0.9rem;
            color: #495057;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .guest-tag i {
            color: #1e3d59;
        }

        .guest-tag button {
            background: none;
            border: none;
            color: #dc3545;
            cursor: pointer;
        }

        /* Estilos para Select2 */
        .select2-container--bootstrap-5 .select2-selection {
            border: 2px solid #f1f4f8;
            border-radius: 8px;
            padding: 0.4rem;
        }

        .select2-container--bootstrap-5 .select2-selection--multiple .select2-selection__choice {
            background-color: #1e3d59;
            color: white;
            border: none;
            padding: 0.2rem 0.6rem;
            margin: 0.2rem;
        }

        .huespedes-box {
            border: 2px solid #f1f4f8;
            border-radius: 8px;
            padding: 1rem;
            height: 180px; /* Reducido de 212px a 180px */
            margin-bottom: 1rem;
        }

        .huespedes-box h6 {
            color: #1e3d59;
            margin-bottom: 0.3rem;
            font-size: 0.9rem;
        }

        .huespedes-box select {
            height: 130px !important; /* Reducido de 162px a 130px */
            border: none !important;
            padding: 0 !important;
            overflow-y: auto;
        }

        .huespedes-box select option {
            padding: 0.5rem;
            margin-bottom: 0.25rem;
            border-radius: 4px;
        }

        .huespedes-box select option:hover {
            background-color: #e9ecef;
        }

        .input-group .btn-success {
            background-color: #28a745;
            border-color: #28a745;
            color: white;
            transition: all 0.3s ease;
        }

        .input-group .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
            transform: translateY(-2px);
        }

        .input-group .btn {
            padding: 0.75rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .input-group .bi {
            font-size: 1.2rem;
        }

        #filtroHuespedes {
            margin-bottom: 0.3rem;
            border: 1px solid #ced4da;
            border-radius: 4px;
            padding: 0.25rem 0.5rem;
            font-size: 0.85rem;
        }

        #filtroHuespedes:focus {
            border-color: #1e3d59;
            box-shadow: 0 0 0 0.2rem rgba(30, 61, 89, 0.25);
        }

        .huespedes-box select {
            height: calc(150px - 38px) !important; /* Ajustar altura considerando el campo de búsqueda */
        }

        .huespedes-box .d-flex {
            margin-bottom: 0.3rem !important;
        }

        #huespedes-disponibles{
            height: 130px;
        }
        
        .btn-float {
            position: fixed;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            z-index: 1000;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .btn-float .btn {
            width: 200px;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="booking-header text-center">
            <h1>Gestión de Reservas</h1>
            <p class="lead">Crear una nueva reserva</p>
        </div>

        <div class="row justify-content-center">
            <div class="col-12 col-md-8">
                <div class="roles-card">
                    <div class="roles-card-header">
                        <h2 class="roles-card-title text-center">Nueva Reserva</h2>
                    </div>
                    <div class="roles-card-body p-4">
                        <form asp-action="Create" method="post" id="createForm">
                            @Html.AntiForgeryToken()
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <!-- Cliente -->
                            <div class="form-group">
                                <label asp-for="IdCliente" class="control-label">Cliente</label>
                                <select asp-for="IdCliente" class="form-control" asp-items="ViewBag.IdCliente">
                                    <option value="">-- Seleccione un Cliente --</option>
                                </select>
                                <span asp-validation-for="IdCliente" class="text-danger"></span>
                            </div>

                            <!-- Huéspedes -->
                            <div class="form-group">
                                <label class="control-label">Huéspedes</label>
                                <div class="d-flex justify-content-between align-items-center mb-1">
                                    <input type="text" class="form-control" id="filtroHuespedes" placeholder="Buscar huésped...">
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="huespedes-box">
                                            <h6>Huéspedes Disponibles</h6>
                                            <select id="huespedes-disponibles" class="form-control" multiple>
                                                @foreach (var item in ViewBag.Huespedes)
                                                {
                                                    <option value="@item.Value">@item.Text</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="huespedes-box">
                                            <h6>Huéspedes Seleccionados</h6>
                                            <select id="huespedes-seleccionados" name="HuespedesSeleccionados" class="form-control" multiple>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Número de Personas -->
                            <div class="form-group">
                                <label asp-for="NumeroPersonas" class="control-label">Número de Personas</label>
                                <input asp-for="NumeroPersonas" class="form-control" type="number" min="1" id="numeroPersonas" />
                                <span asp-validation-for="NumeroPersonas" class="text-danger"></span>
                                <span id="capacidadError" class="text-danger" style="display:none"></span>
                            </div>

                            <!-- Habitación -->
                            <div class="form-group">
                                <label asp-for="IdHabitacion" class="control-label">Habitación</label>
                                <select asp-for="IdHabitacion" class="form-control" id="habitacionSelect">
                                    <option value="">Seleccione una habitación</option>
                                    @foreach (var item in ViewBag.IdHabitacion)
                                    {
                                        <option value="@item.Value" 
                                                data-precio="@ViewBag.HabitacionesPrecios[int.Parse(item.Value)]"
                                                data-capacidad="@ViewBag.HabitacionesCapacidad[int.Parse(item.Value)]">
                                            @item.Text
                                        </option>
                                    }
                                </select>
                                <span asp-validation-for="IdHabitacion" class="text-danger"></span>
                            </div>

                            <!-- Fechas -->
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="FechaInicio" class="control-label">Fecha de Inicio</label>
                                        <input asp-for="FechaInicio" class="form-control" type="date" />
                                        <span asp-validation-for="FechaInicio" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="FechaFin" class="control-label">Fecha de Fin</label>
                                        <input asp-for="FechaFin" class="form-control" type="date" />
                                        <span asp-validation-for="FechaFin" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>

                            <!-- Servicios -->
                            <div class="form-group">
                                <label class="control-label">Servicios Adicionales</label>
                                <div class="row">
                                    @foreach (var servicio in ViewBag.ServiciosActivos)
                                    {
                                        <div class="col-md-6">
                                            <div class="form-check mb-2">
                                                <input class="form-check-input servicio-checkbox" 
                                                       type="checkbox" 
                                                       name="ServiciosSeleccionados" 
                                                       value="@servicio.Value"
                                                       id="servicio_@servicio.Value"
                                                       data-precio="@servicio.Text.Split('$')[1].Trim()">
                                                <label class="form-check-label" for="servicio_@servicio.Value">
                                                    @servicio.Text
                                                </label>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Detalles de la Reserva -->
                            <div class="form-group mt-4">
                                <div class="card">
                                    <div class="card-header bg-light">
                                        <h5 class="mb-0">Detalles de la Reserva</h5>
                                    </div>
                                    <div class="card-body">
                                        <!-- Detalles de la habitación -->
                                        <div class="mb-4">
                                            <h6 class="text-muted">Detalles de la Habitación</h6>
                                            <div class="table-responsive">
                                                <table class="table table-sm">
                                                    <tr>
                                                        <td>Precio por día:</td>
                                                        <td class="text-end" id="precioPorDia">$0.00</td>
                                                    </tr>
                                                    <tr>
                                                        <td>Número de días:</td>
                                                        <td class="text-end" id="numeroDias">0</td>
                                                    </tr>
                                                    <tr class="fw-bold">
                                                        <td>Total por días de reserva:</td>
                                                        <td class="text-end" id="totalPorDias">$0.00</td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>

                                        <!-- Detalles de servicios -->
                                        <div>
                                            <h6 class="text-muted">Servicios Adicionales Seleccionados</h6>
                                            <div class="table-responsive">
                                                <table class="table table-sm" id="tablaServicios">
                                                    <thead>
                                                        <tr>
                                                            <th>Servicio</th>
                                                            <th class="text-end">Precio</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                    <tfoot>
                                                        <tr class="fw-bold">
                                                            <td>Total Servicios:</td>
                                                            <td class="text-end" id="totalServicios">$0.00</td>
                                                        </tr>
                                                    </tfoot>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Precios y Totales -->
                            <div class="row mt-4">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label asp-for="PrecioTotal" class="control-label">Precio Total</label>
                                        <input asp-for="PrecioTotal" class="form-control" readonly />
                                        <span asp-validation-for="PrecioTotal" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label asp-for="Anticipo" class="control-label">Anticipo</label>
                                        <input asp-for="Anticipo" class="form-control" type="number" min="0" step="0.01" />
                                        <span asp-validation-for="Anticipo" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">Saldo</label>
                                        <input type="text" id="Saldo" class="form-control" readonly />
                                    </div>
                                </div>
                            </div>

                            <!-- Notas y Estado -->
                            <div class="form-group">
                                <label asp-for="Notas" class="control-label">Notas</label>
                                <textarea asp-for="Notas" class="form-control"></textarea>
                                <span asp-validation-for="Notas" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="IdEstado" class="control-label">Estado</label>
                                <select asp-for="IdEstado" class="form-control" asp-items="ViewBag.IdEstado"></select>
                                <span asp-validation-for="IdEstado" class="text-danger"></span>
                            </div>

                            <!-- Botones -->
                            <div class="form-group text-center mt-4">
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-check-circle"></i> Crear Reserva
                                </button>
                                <a asp-action="Index" class="btn btn-secondary">
                                    <i class="bi bi-arrow-left-circle"></i> Volver
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="btn-float">
        <a href="@Url.Action("Create", "Clientes")" class="btn btn-info">
            <i class="bi bi-person-plus-fill"></i> Crear Nuevo Cliente
        </a>
        <a href="@Url.Action("Create", "Huespedes")" class="btn btn-info">
            <i class="bi bi-person-plus-fill"></i> Crear Nuevo Huésped
        </a>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    
    <!-- Tus scripts personalizados -->
    <script src="~/js/index.js"></script>
    <script src="~/js/sidebar.js"></script>

    <script>
        $(document).ready(function () {
    // Variables globales para precios y capacidades
    const precios = @Html.Raw(Json.Serialize(ViewBag.HabitacionesPrecios));
    const capacidades = @Html.Raw(Json.Serialize(ViewBag.HabitacionesCapacidad));
    const disponibilidad = @Html.Raw(Json.Serialize(ViewBag.HabitacionesDisponibles));

    // 1. Gestión de huéspedes
    function setupHuespedesHandlers() {
        const huespedesDisponibles = $('#huespedes-disponibles');
        const huespedesSeleccionados = $('#huespedes-seleccionados');

        // Doble clic para mover huéspedes
        huespedesDisponibles.on('dblclick', 'option', function() {
            const maxPersonas = parseInt($('#numeroPersonas').val()) || 0;
            if (huespedesSeleccionados.children().length < maxPersonas) {
                $(this).appendTo(huespedesSeleccionados);
                validarHuespedes();
                calcularPrecioTotal();
            }
        });

        huespedesSeleccionados.on('dblclick', 'option', function() {
            $(this).appendTo(huespedesDisponibles);
            validarHuespedes();
            calcularPrecioTotal();
        });
    }

    // 2. Validación de huéspedes
    function validarHuespedes() {
        const numHuespedes = $('#huespedes-seleccionados option').length;
        const maxPersonas = parseInt($('#numeroPersonas').val()) || 0;
        const habitacionId = $('#habitacionSelect').val();
        const capacidadHabitacion = capacidades[habitacionId] || 0;

        const isValid = numHuespedes <= maxPersonas && maxPersonas <= capacidadHabitacion;
        
        $('#huespedes-error').toggle(!isValid);
        return isValid;
    }

    // Reemplazar la función calcularPrecioTotal con esta versión mejorada:
    function calcularPrecioTotal() {
        const habitacionId = $('#habitacionSelect').val();
        const precioHabitacion = precios[habitacionId] || 0;
        
        // Calcular días
        const fechaInicio = new Date($('#FechaInicio').val());
        const fechaFin = new Date($('#FechaFin').val());
        const diffDays = Math.ceil(Math.abs(fechaFin - fechaInicio) / (1000 * 60 * 60 * 24)) || 0;

        // Actualizar detalles de la habitación
        $('#precioPorDia').text(`$${precioHabitacion.toFixed(2)}`);
        $('#numeroDias').text(diffDays);
        const totalPorDias = precioHabitacion * diffDays;
        $('#totalPorDias').text(`$${totalPorDias.toFixed(2)}`);

        // Actualizar tabla de servicios
        let precioServicios = 0;
        const tablaServicios = $('#tablaServicios tbody');
        tablaServicios.empty();
        
        $('.servicio-checkbox:checked').each(function() {
            const precio = parseFloat($(this).data('precio')) || 0;
            const nombreServicio = $(this).next('label').text().trim();
            precioServicios += precio;
            
            tablaServicios.append(`
                <tr>
                    <td>${nombreServicio}</td>
                    <td class="text-end">$${precio.toFixed(2)}</td>
                </tr>
            `);
        });
        
        $('#totalServicios').text(`$${precioServicios.toFixed(2)}`);

        // Calcular total y actualizar campos
        const precioTotal = totalPorDias + precioServicios;
        $('#PrecioTotal').val(precioTotal.toFixed(2));

        // Validar y actualizar anticipo
        const anticipo = parseFloat($('#Anticipo').val()) || 0;
        if (anticipo > precioTotal) {
            $('#Anticipo').val(precioTotal.toFixed(2));
        }
        
        // Calcular y actualizar saldo
        const saldo = precioTotal - (parseFloat($('#Anticipo').val()) || 0);
        $('#Saldo').val(saldo.toFixed(2));
    }

    // 3. Cálculo del precio total
    function calcularPrecioTotal() {
        const habitacionId = $('#habitacionSelect').val();
        const precioHabitacion = precios[habitacionId] || 0;
        
        // Calcular días
        const fechaInicio = new Date($('#FechaInicio').val());
        const fechaFin = new Date($('#FechaFin').val());
        const diffDays = Math.ceil(Math.abs(fechaFin - fechaInicio) / (1000 * 60 * 60 * 24)) || 1;

        // Calcular precio base
        let precioBase = precioHabitacion * diffDays;

        // Sumar servicios seleccionados
        let precioServicios = 0;
        $('.servicio-checkbox:checked').each(function() {
            precioServicios += parseFloat($(this).data('precio')) || 0;
        });

        // Calcular total y actualizar campos
        const precioTotal = precioBase + precioServicios;
        const anticipo = parseFloat($('#Anticipo').val()) || 0;
        const saldo = precioTotal - anticipo;

        $('#PrecioTotal').val(precioTotal.toFixed(2));
        $('#Saldo').val(saldo.toFixed(2));
    }

    // 4. Manejo del formulario
    function setupFormHandlers() {
        $('#createForm').on('submit', function(e) {
            e.preventDefault();

            if (!validarHuespedes()) {
                Swal.fire({
                    title: 'Error',
                    text: 'La cantidad de huéspedes no es válida',
                    icon: 'error'
                });
                return false;
            }

            // Seleccionar todos los huéspedes
            $('#huespedes-seleccionados option').prop('selected', true);

            // Crear FormData con todos los datos del formulario
            const formData = new FormData(this);

            // Obtener los huéspedes seleccionados
            const huespedesSeleccionados = [];
            $('#huespedes-seleccionados option').each(function() {
                huespedesSeleccionados.push($(this).val());
            });

            // Obtener los servicios seleccionados
            const serviciosSeleccionados = [];
            $('.servicio-checkbox:checked').each(function() {
                serviciosSeleccionados.push($(this).val());
            });

            // Crear objeto con todos los datos
            const reservaData = {
                IdCliente: $('#IdCliente').val(),
                IdHabitacion: $('#habitacionSelect').val(),
                FechaInicio: $('#FechaInicio').val(),
                FechaFin: $('#FechaFin').val(),
                NumeroPersonas: $('#numeroPersonas').val(),
                PrecioTotal: $('#PrecioTotal').val(),
                Anticipo: $('#Anticipo').val(),
                Notas: $('#Notas').val(),
                IdEstado: $('#IdEstado').val(),
                HuespedesSeleccionados: huespedesSeleccionados,
                ServiciosSeleccionados: serviciosSeleccionados
            };

            $.ajax({
                url: $('#createForm').attr('action'),
                type: 'POST',
                data: JSON.stringify(reservaData),
                contentType: 'application/json',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        Swal.fire({
                            title: 'Éxito',
                            text: 'Reserva creada correctamente',
                            icon: 'success'
                        }).then(() => {
                            window.location.href = '/Reservas/Index';
                        });
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: response.message || 'Error al crear la reserva',
                            icon: 'error'
                        });
                    }
                },
                error: function(xhr, status, error) {
                    Swal.fire({
                        title: 'Error',
                        text: 'Error al crear la reserva: ' + error,
                        icon: 'error'
                    });
                }
            });
        });
    }

    // 5. Event Listeners
    function setupEventListeners() {
        $('#habitacionSelect, #FechaInicio, #FechaFin').change(function() {
            calcularPrecioTotal();
            validarHuespedes();
        });

        $('#Anticipo').on('input', calcularPrecioTotal);
        
        $('.servicio-checkbox').change(function() {
            calcularPrecioTotal();
        });

        $('#numeroPersonas').change(function() {
            validarHuespedes();
            calcularPrecioTotal();
        });

        // Filtro de huéspedes
        $('#filtroHuespedes').on('keyup', function() {
            const valor = $(this).val().toLowerCase();
            $('#huespedes-disponibles option').each(function() {
                $(this).toggle($(this).text().toLowerCase().includes(valor));
            });
        });
    }

    // Agregar validaciones para número de personas y anticipo
    function setupValidations() {
        $('#numeroPersonas').on('change', function() {
            const numPersonas = parseInt($(this).val());
            const habitacionId = $('#habitacionSelect').val();
            const capacidadHabitacion = capacidades[habitacionId] || 0;
            const errorElement = $('#capacidadError');

            if (numPersonas < 1) {
                $(this).val(1);
                errorElement.text('El número de personas no puede ser menor a 1');
                errorElement.show();
            } else if (numPersonas > capacidadHabitacion) {
                $(this).val(capacidadHabitacion);
                errorElement.text(`El número de personas no puede superar la capacidad de la habitación (${capacidadHabitacion})`);
                errorElement.show();
            } else {
                errorElement.hide();
            }
            calcularPrecioTotal();
        });

        $('#Anticipo').on('change', function() {
            const anticipo = parseFloat($(this).val());
            const precioTotal = parseFloat($('#PrecioTotal').val());
            
            if (anticipo < 1) {
                $(this).val(1);
                Swal.fire({
                    title: 'Advertencia',
                    text: 'El anticipo no puede ser menor a 1',
                    icon: 'warning'
                });
            } else if (anticipo > precioTotal) {
                $(this).val(precioTotal.toFixed(2));
                Swal.fire({
                    title: 'Advertencia',
                    text: 'El anticipo no puede ser mayor al precio total',
                    icon: 'warning'
                });
            }
            calcularPrecioTotal();
        });
    }

    // 6. Inicialización
    function init() {
        setupHuespedesHandlers();
        setupFormHandlers();
        setupEventListeners();
        setupValidations();
        calcularPrecioTotal();
    }

    // Iniciar todo cuando el documento esté listo
    init();
});
    </script>
    <script>
$(document).ready(function () {
    // Variables globales para precios y disponibilidad
    const precios = @Html.Raw(Json.Serialize(ViewBag.HabitacionesPrecios));
    const disponibilidad = @Html.Raw(Json.Serialize(ViewBag.HabitacionesDisponibles));

    function actualizarDisponibilidad() {
        const habitacionId = $('#habitacionSelect').val();
        if (habitacionId) {
            const habitacionesDisponibles = disponibilidad[habitacionId] || 0;
            $('#habitacionesDisponibles').val(habitacionesDisponibles);

            // Deshabilitar el botón de submit si no hay habitaciones disponibles
            const submitButton = $('button[type="submit"]');
            if (habitacionesDisponibles <= 0) {
                submitButton.prop('disabled', true);
                Swal.fire({
                    title: 'Advertencia',
                    text: 'No hay habitaciones disponibles',
                    icon: 'warning'
                });
            } else {
                submitButton.prop('disabled', false);
            }
        } else {
            $('#habitacionesDisponibles').val('');
        }
    }

    // Event listeners
    $('#habitacionSelect').change(function() {
        actualizarDisponibilidad();
        calcularPrecioTotal();
        validarHuespedes();
    });

    // Inicializar disponibilidad
    actualizarDisponibilidad();
});
</script>
    <script>
$(document).ready(function() {
    $('select[name="ServiciosSeleccionados"]').select2({
        placeholder: "Seleccione los servicios...",
        allowClear: true
    });
});
</script>
</body>
</html>

<style>
.huespedes-box {
    border: 2px solid #f1f4f8;
    border-radius: 8px;
    padding: 1rem;
    height: 180px; /* Reducido de 212px a 180px */
    margin-bottom: 1rem;
}

.btn-link.text-success:hover {
    color: #198754 !important;
    transform: scale(1.1);
    transition: all 0.2s;
}

#filtroHuespedes {
    border: 1px solid #ced4da;
    border-radius: 4px;
    padding: 0.25rem 0.5rem;
    font-size: 0.85rem;
}

#filtroHuespedes:focus {
    border-color: #1e3d59;
    box-shadow: 0 0 0 0.2rem rgba(30, 61, 89, 0.25);
}

.huespedes-box select {
    height: 130px !important; /* Reducido de 162px a 130px */
    border: none !important;
    padding: 0 !important;
    overflow-y: auto;
}

.btn-float {
    position: fixed;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    z-index: 1000;
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.btn-float .btn {
    width: 200px;
}
</style>
