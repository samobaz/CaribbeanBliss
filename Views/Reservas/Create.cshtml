@model Caribbean2.Models.Reserva
@{
    ViewData["Title"] = "Crear Reserva";
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crear Reserva</title>
    
    <!-- CSS -->
    <link rel="stylesheet" href="~/css/sideBar.css">
    <link rel="stylesheet" href="~/css/roles.css">
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/menuCentral.css">
    <link rel="stylesheet" href="~/css/Reservas.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <!-- SweetAlert JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .booking-header {
            background: linear-gradient(rgba(30, 61, 89, 0.9), rgba(30, 61, 89, 0.9)),
                        url('/images/hotel-bg.jpg') center/cover;
            color: white;
            padding: 3rem 0;
            margin-bottom: 2rem;
            border-radius: 10px;
        }

        .roles-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 0 20px rgba(0,0,0,0.08);
            overflow: hidden;
        }

        .roles-card-header {
            background: linear-gradient(135deg, #1e3d59 0%, #2b5278 100%);
            padding: 1.5rem;
            border: none;
        }

        .roles-card-title {
            color: white;
            font-family: 'Playfair Display', serif;
            margin: 0;
        }

        .form-control {
            border: 2px solid #f1f4f8;
            border-radius: 8px;
            padding: 0.75rem;
            margin-bottom: 1rem;
        }

        .form-control:focus {
            border-color: #1e3d59;
            box-shadow: 0 0 0 0.2rem rgba(30, 61, 89, 0.25);
        }

        .btn-primary {
            background: #ff6e40;
            border: none;
            padding: 0.6rem 1.2rem;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            background: #ff5722;
            transform: translateY(-2px);
        }

        .selected-guests {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-top: 0.5rem;
        }

        .guest-tag {
            background-color: #e9ecef;
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 0.9rem;
            color: #495057;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .guest-tag i {
            color: #1e3d59;
        }

        .guest-tag button {
            background: none;
            border: none;
            color: #dc3545;
            cursor: pointer;
        }

        /* Estilos para Select2 */
        .select2-container--bootstrap-5 .select2-selection {
            border: 2px solid #f1f4f8;
            border-radius: 8px;
            padding: 0.4rem;
        }

        .select2-container--bootstrap-5 .select2-selection--multiple .select2-selection__choice {
            background-color: #1e3d59;
            color: white;
            border: none;
            padding: 0.2rem 0.6rem;
            margin: 0.2rem;
        }

        .huespedes-box {
            border: 2px solid #f1f4f8;
            border-radius: 8px;
            padding: 1rem;
            height: 180px; /* Reducido de 212px a 180px */
            margin-bottom: 1rem;
        }

        .huespedes-box h6 {
            color: #1e3d59;
            margin-bottom: 0.3rem;
            font-size: 0.9rem;
        }

        .huespedes-box select {
            height: 130px !important; /* Reducido de 162px a 130px */
            border: none !important;
            padding: 0 !important;
            overflow-y: auto;
        }

        .huespedes-box select option {
            padding: 0.5rem;
            margin-bottom: 0.25rem;
            border-radius: 4px;
        }

        .huespedes-box select option:hover {
            background-color: #e9ecef;
        }

        .input-group .btn-success {
            background-color: #28a745;
            border-color: #28a745;
            color: white;
            transition: all 0.3s ease;
        }

        .input-group .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
            transform: translateY(-2px);
        }

        .input-group .btn {
            padding: 0.75rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .input-group .bi {
            font-size: 1.2rem;
        }

        #filtroHuespedes {
            margin-bottom: 0.3rem;
            border: 1px solid #ced4da;
            border-radius: 4px;
            padding: 0.25rem 0.5rem;
            font-size: 0.85rem;
        }

        #filtroHuespedes:focus {
            border-color: #1e3d59;
            box-shadow: 0 0 0 0.2rem rgba(30, 61, 89, 0.25);
        }

        .huespedes-box select {
            height: calc(150px - 38px) !important; /* Ajustar altura considerando el campo de búsqueda */
        }

        .huespedes-box .d-flex {
            margin-bottom: 0.3rem !important;
        }

        #huespedes-disponibles{
            height: 130px;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="booking-header text-center">
            <h1>Gestión de Reservas</h1>
            <p class="lead">Crear una nueva reserva</p>
        </div>

        <div class="row justify-content-center">
            <div class="col-12 col-md-8">
                <div class="roles-card">
                    <div class="roles-card-header d-flex justify-content-between align-items-center">
                        <div class="text-center flex-grow-1">
                            <h2 class="roles-card-title">Nueva Reserva</h2>
                        </div>
                    </div>
                    <div class="roles-card-body p-4">
                        <form asp-action="Create" method="post" id="createForm">
                            @Html.AntiForgeryToken()
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <!-- Modificar los botones -->
                            <div class="form-group">
                                <label asp-for="IdCliente" class="control-label">Cliente</label>
                                <div class="input-group">
                                    <select asp-for="IdCliente" class="form-control" asp-items="ViewBag.IdCliente">
                                        <option value="">-- Seleccione un Cliente --</option>
                                    </select>
                                    <button type="button" class="btn btn-link text-success" data-bs-toggle="modal" data-bs-target="#modalNuevoCliente">
                                        <i class="bi bi-person-plus-fill"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="IdCliente" class="text-danger"></span>
                            </div>

                            <!-- Reemplazar la sección de huéspedes -->
                            <div class="form-group">
                                <label class="control-label">Huéspedes</label>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="huespedes-box">
                                            <h6>Huéspedes Disponibles</h6>
                                            <select id="huespedes-disponibles" class="form-control" multiple>
                                                @foreach (var huesped in ViewBag.Huespedes)
                                                {
                                                    <option value="@huesped.Value">@huesped.Text</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="huespedes-box">
                                            <h6>Huéspedes Seleccionados</h6>
                                            <select id="huespedes-seleccionados" class="form-control" multiple name="HuespedesSeleccionados">
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <span id="huespedes-error" class="text-danger" style="display:none">
                                    El número de huéspedes no puede exceder el número de personas de la reserva
                                </span>
                            </div>

                            <div class="form-group">
                                <label asp-for="IdHabitacion" class="control-label">Habitación</label>
                                <select asp-for="IdHabitacion" class="form-control" id="habitacionSelect">
                                    <option value="">-- Seleccione una Habitación --</option>
                                    @foreach (var item in ViewBag.IdHabitacion)
                                    {
                                        <option value="@item.Value" 
                                                data-precio="@ViewBag.HabitacionesPrecios[int.Parse(item.Value)]">
                                            @item.Text
                                        </option>
                                    }
                                </select>
                                <span asp-validation-for="IdHabitacion" class="text-danger"></span>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="FechaInicio" class="control-label">Fecha de Inicio</label>
                                        <input asp-for="FechaInicio" class="form-control" type="date" />
                                        <span asp-validation-for="FechaInicio" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="FechaFin" class="control-label">Fecha de Fin</label>
                                        <input asp-for="FechaFin" class="form-control" type="date" />
                                        <span asp-validation-for="FechaFin" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label asp-for="NumeroPersonas" class="control-label">Número de Personas</label>
                                <input asp-for="NumeroPersonas" class="form-control" id="numeroPersonas" min="1" />
                                <span asp-validation-for="NumeroPersonas" class="text-danger"></span>
                                <span id="capacidadError" class="text-danger" style="display:none">
                                    El número de personas excede la capacidad de la habitación
                                </span>
                            </div>

                            <div class="form-group">
                                <label asp-for="Notas" class="control-label">Notas</label>
                                <textarea asp-for="Notas" class="form-control" rows="3"></textarea>
                                <span asp-validation-for="Notas" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="IdEstado" class="control-label">Estado</label>
                                <select asp-for="IdEstado" class="form-control" asp-items="ViewBag.IdEstado"></select>
                                <span asp-validation-for="IdEstado" class="text-danger"></span>
                            </div>

                            <!-- Reemplazar la sección de servicios -->
                            <div class="form-group">
                                <label class="control-label">Servicios Adicionales</label>
                                <div class="row">
                                    @foreach (var servicio in ViewBag.ServiciosActivos)
                                    {
                                        <div class="col-md-6">
                                            <div class="form-check mb-2">
                                                <input class="form-check-input servicio-checkbox" type="checkbox" 
                                                        name="ServiciosSeleccionados" 
                                                        value="@servicio.IdServicio" 
                                                        id="servicio_@servicio.IdServicio"
                                                        data-precio="@servicio.PrecioServicio">
                                                <label class="form-check-label" for="servicio_@servicio.IdServicio">
                                                    @servicio.Nombre - @servicio.PrecioServicio
                                                </label>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Reemplazar la sección de precios actual con este código y colocarlo después de la sección de servicios -->
                            <div class="form-group mt-4">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label asp-for="PrecioTotal" class="control-label">Precio Total</label>
                                            <input asp-for="PrecioTotal" class="form-control" readonly style="background-color: #e9ecef;"/>
                                            <span asp-validation-for="PrecioTotal" class="text-danger"></span>
                                            <span asp-validation-for="PrecioTotal" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label asp-for="Anticipo" class="control-label">Anticipo</label>
                                            <input asp-for="Anticipo" class="form-control" />
                                            <span asp-validation-for="Anticipo" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">Saldo</label>
                                            <input type="text" id="Saldo" class="form-control" readonly style="background-color: #e9ecef;" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group text-center mt-4">
                                <button type="submit" class="btn btn-primary me-2">
                                    <i class="bi bi-check-circle"></i> Crear Reserva
                                </button>
                                <a asp-action="Index" class="btn btn-secondary">
                                    <i class="bi bi-arrow-left-circle"></i> Regresar
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Nuevo Cliente -->
    <div class="modal fade" id="modalNuevoCliente" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Crear Nuevo Cliente</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="formNuevoCliente">
                        <div class="form-group">
                            <label for="nombre">Nombre Cliente</label>
                            <input type="text" class="form-control" id="nombre" name="nombre" required>
                        </div>
                        <div class="form-group">
                            <label for="email">Correo Electrónico</label>
                            <input type="email" class="form-control" id="email" name="email" required>
                        </div>
                        <div class="form-group">
                            <label for="telefono">Teléfono</label>
                            <input type="text" class="form-control" id="telefono" name="telefono" required>
                        </div>
                        <div class="form-group">
                            <label for="idRol">Rol</label>
                            <select class="form-control" id="idRol" name="idRol" required>
                                <option value="">Seleccione un rol</option>
                                @foreach (var rol in ViewBag.RolId)
                                {
                                    <option value="@rol.Value">@rol.Text</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <div class="form-check">
                                <input type="hidden" name="ClienteEstado" value="false">
                                <input type="checkbox" class="form-check-input" id="ClienteEstado" value="true" name="ClienteEstado" checked>
                                <label class="form-check-label" for="ClienteEstado">Cliente Activo</label>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="guardarCliente()">Guardar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Nuevo Huésped -->
    <div class="modal fade" id="modalNuevoHuesped" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Crear Nuevo Huésped</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="formNuevoHuesped" asp-action="Create" method="post">
                        <div class="form-group">
                            <label for="NombreCompleto">Nombre Completo</label>
                            <input type="text" class="form-control" id="NombreCompleto" name="NombreCompleto" required>
                        </div>
                        <div class="form-group">
                            <label for="CorreoElectronico">Correo Electrónico</label>
                            <input type="email" class="form-control" id="CorreoElectronico" name="CorreoElectronico" required>
                        </div>
                        <div class="form-group">
                            <label for="TipoDocumento">Tipo de Documento</label>
                            <select class="form-control" id="TipoDocumento" name="TipoDocumento" required>
                                <option value="" disabled selected>Seleccione un tipo</option>
                                <option value="CC">Cédula de Ciudadanía</option>
                                <option value="TI">Tarjeta de Identidad</option>
                                <option value="CE">Cédula de Extranjería</option>
                                <option value="PAS">Pasaporte</option>
                                <option value="NIT">NIT</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="NumeroIdentificacion">Número de Identificación</label>
                            <input type="text" class="form-control" id="NumeroIdentificacion" name="NumeroIdentificacion" required>
                        </div>
                        <div class="form-group">
                            <label for="NumeroContacto">Número de Contacto</label>
                            <input type="text" class="form-control" id="NumeroContacto" name="NumeroContacto" required>
                        </div>
                        <div class="form-group">
                            <label for="LugarResidencia">Lugar de Residencia</label>
                            <input type="text" class="form-control" id="LugarResidencia" name="LugarResidencia" required>
                        </div>
                        <div class="form-group">
                            <label for="IdEstadoHuesped">Estado</label>
                            <select class="form-control" id="IdEstadoHuesped" name="IdEstadoHuesped" asp-items="ViewBag.IdEstadoHuesped"></select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" onclick="guardarHuesped()">Guardar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    
    
    <!-- Tus scripts personalizados -->
    <script src="~/js/index.js"></script>
    <script src="~/js/sidebar.js"></script>

    <script>
        $(document).ready(function() {
            // Inicializar Select2 para múltiple selección
            $('#huespedes-select').select2({
                placeholder: "Seleccione los huéspedes",
                width: '100%',
                theme: "bootstrap-5",
                allowClear: true
            }).on('change', function(e) {
                actualizarHuespedesSeleccionados();
            });

            const capacidades = @Html.Raw(Json.Serialize(ViewBag.HabitacionesCapacidad));
            
            $('#habitacionSelect').change(function() {
                validarCapacidad();
            });

            $('#numeroPersonas').change(function() {
                validarCapacidad();
            });

            function validarCapacidad() {
                const habitacionId = $('#habitacionSelect').val();
                const numeroPersonas = parseInt($('#numeroPersonas').val()) || 0;
                const capacidadMaxima = capacidades[habitacionId];

                if (habitacionId && numeroPersonas > 0) {
                    if (numeroPersonas > capacidadMaxima) {
                        $('#capacidadError').show();
                        $('#numeroPersonas').addClass('is-invalid');
                        return false;
                    }
                }
                
                $('#capacidadError').hide();
                $('#numeroPersonas').removeClass('is-invalid');
                return true;
            }

            // Reemplazar el evento submit actual
            $('#createForm').on('submit', function(e) {
                e.preventDefault();

                // Validar que se hayan seleccionado huéspedes
                const huespedesSeleccionados = $('#huespedes-seleccionados option').length;
                if (huespedesSeleccionados === 0) {
                    Swal.fire({
                        title: 'Error',
                        text: 'Debe seleccionar al menos un huésped',
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                    });
                    return false;
                }

                // Validar número de huéspedes
                if (!validarNumeroHuespedes()) {
                    Swal.fire({
                        title: 'Error',
                        text: 'El número de huéspedes no puede exceder el número de personas de la reserva',
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                    });
                    return false;
                }

                // Validar capacidad de habitación
                if (!validarCapacidad()) {
                    Swal.fire({
                        title: 'Error',
                        text: 'El número de personas excede la capacidad de la habitación',
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                    });
                    return false;
                }

                // Validar campos requeridos
                if (!this.checkValidity()) {
                    Swal.fire({
                        title: 'Error',
                        text: 'Por favor, complete todos los campos requeridos correctamente',
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                    });
                    return false;
                }

                const form = this;
                
                // Confirmar antes de enviar
                Swal.fire({
                    title: '¿Desea confirmar la reserva?',
                    text: "Se procederá a crear la reserva con los datos ingresados",
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, crear reserva',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Asegurarse de que los huéspedes seleccionados se incluyan en el formulario
                        $('#huespedes-seleccionados option').prop('selected', true);

                        // Mostrar indicador de carga
                        Swal.fire({
                            title: 'Procesando...',
                            text: 'Creando la reserva',
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            allowEnterKey: false,
                            showConfirmButton: false,
                            didOpen: () => {
                                Swal.showLoading();
                                // Enviar el formulario
                                form.submit();
                            }
                        });
                    }
                });
            });

            function actualizarHuespedesSeleccionados() {
                var selectedOptions = $('#huespedes-select option:selected');
                var container = $('#huespedes-seleccionados');
                container.empty();

                if(selectedOptions.length > 0) {
                    var list = $('<div class="selected-guests"></div>');
                    selectedOptions.each(function() {
                        list.append(`
                            <div class="guest-tag">
                                <i class="bi bi-person-fill"></i>
                                ${$(this).text()}
                                <button type="button" class="btn-remove-guest" data-id="${$(this).val()}">
                                    <i class="bi bi-x-circle"></i>
                                </button>
                            </div>
                        `);
                    });
                    container.append(list);
                }

                // Agregar evento de clic para eliminar huéspedes
                $('.btn-remove-guest').click(function() {
                    var id = $(this).data('id');
                    var option = $(`#huespedes-select option[value='${id}']`);
                    option.prop('selected', false);
                    $('#huespedes-select').trigger('change');
                });
            }

            const huespedesDisponibles = $('#huespedes-disponibles');
            const huespedesSeleccionados = $('#huespedes-seleccionados');
            const numeroPersonas = $('#numeroPersonas');
            
            // Función para validar el número de huéspedes
            function validarNumeroHuespedes() {
                const numHuespedes = huespedesSeleccionados.children().length;
                const maxPersonas = parseInt(numeroPersonas.val()) || 0;
                
                if (numHuespedes > maxPersonas) {
                    $('#huespedes-error').show();
                    return false;
                }
                $('#huespedes-error').hide();
                return true;
            }

            // Mover huésped de disponibles a seleccionados
            huespedesDisponibles.dblclick(function() {
                const selectedOption = $(this).find('option:selected');
                if (selectedOption.length) {
                    const numHuespedes = huespedesSeleccionados.children().length;
                    const maxPersonas = parseInt(numeroPersonas.val()) || 0;
                    
                    if (numHuespedes >= maxPersonas) {
                        $('#huespedes-error').show();
                        return;
                    }
                    
                    selectedOption.remove();
                    huespedesSeleccionados.append(selectedOption);
                    validarNumeroHuespedes();
                }
            });

            // Mover huésped de seleccionados a disponibles
            huespedesSeleccionados.dblclick(function() {
                const selectedOption = $(this).find('option:selected');
                if (selectedOption.length) {
                    selectedOption.remove();
                    huespedesDisponibles.append(selectedOption);
                    validarNumeroHuespedes();
                }
            });

            // Validar cuando cambia el número de personas
            numeroPersonas.change(function() {
                validarNumeroHuespedes();
            });

            // Validar antes de enviar el formulario
            $('#createForm').submit(function(e) {
                if (!validarNumeroHuespedes()) {
                    e.preventDefault();
                    Swal.fire({
                        title: 'Error',
                        text: 'El número de huéspedes no puede exceder el número de personas de la reserva',
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                    });
                    return false;
                }
                // ... resto del código del submit
            });

            // Inicializar tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();

            // Función para actualizar los selectores después de crear un nuevo registro
            function actualizarSelectores() {
                // Actualizar selector de clientes
                $.get('@Url.Action("GetClientes", "Reservas")', function(data) {
                    var clienteSelect = $('#IdCliente');
                    clienteSelect.empty();
                    clienteSelect.append('<option value="">-- Seleccione un Cliente --</option>');
                    $.each(data, function(index, item) {
                        clienteSelect.append($('<option></option>')
                            .val(item.value)
                            .text(item.text));
                    });
                });

                // Actualizar selector de huéspedes
                $.get('@Url.Action("GetHuespedes", "Reservas")', function(data) {
                    var huespedSelect = $('#huespedes-disponibles');
                    huespedSelect.empty();
                    $.each(data, function(index, item) {
                        huespedSelect.append($('<option></option>')
                            .val(item.value)
                            .text(item.text));
                    });
                });
            }

            // Escuchar cuando se cierra una ventana popup
            window.addEventListener('message', function(e) {
                if (e.data === 'clienteCreado' || e.data === 'huespedCreado') {
                    actualizarSelectores();
                }
            });

            // Función para filtrar huéspedes
            $('#filtroHuespedes').on('keyup', function() {
                var valor = $(this).val().toLowerCase();
                $('#huespedes-disponibles option').filter(function() {
                    var texto = $(this).text().toLowerCase();
                    $(this).toggle(texto.indexOf(valor) > -1);
                });
            });
        });
        function guardarCliente() {
            // Obtener el formulario
            const form = document.getElementById('formNuevoCliente');
            
            // Validar campos requeridos
            if (!form.checkValidity()) {
                Swal.fire({
                    title: 'Error',
                    text: 'Por favor, complete todos los campos requeridos',
                    icon: 'error',
                    confirmButtonColor: '#3085d6'
                });
                return;
            }

            // Crear objeto con los datos del formulario
            const formData = new FormData(form);
            
            // Manejar específicamente el estado del cliente
            formData.set('ClienteEstado', document.getElementById('ClienteEstado').checked);
            
            $.ajax({
                url: '@Url.Action("CreateAjax", "Clientes")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response.success) {
                        Swal.fire({
                            title: '¡Éxito!',
                            text: response.message,
                            icon: 'success',
                            confirmButtonColor: '#3085d6'
                        }).then(() => {
                            // Limpiar el formulario
                            form.reset();
                            
                            // Cerrar el modal
                            $('#modalNuevoCliente').modal('hide');
                            
                            // Actualizar el select de clientes
                            if (response.cliente) {
                                const clienteSelect = $('#IdCliente');
                                const newOption = new Option(response.cliente.nombre, response.cliente.id, true, true);
                                clienteSelect.append(newOption).trigger('change');
                            }
                        });
                    } else {
                        let errorMessage = response.message;
                        if (response.errors && response.errors.length > 0) {
                            errorMessage += ':\n' + response.errors.join('\n');
                        }
                        
                        Swal.fire({
                            title: 'Error',
                            text: errorMessage,
                            icon: 'error',
                            confirmButtonColor: '#3085d6'
                        });
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'Error al procesar la solicitud: ' + error,
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                    });
                }
            });
        }

        function guardarHuesped() {
            const form = document.getElementById('formNuevoHuesped');
            const formData = new FormData(form);
            
            // Validar campos requeridos
            if (!form.checkValidity()) {
                Swal.fire({
                    title: 'Error',
                    text: 'Por favor, complete todos los campos requeridos',
                    icon: 'error',
                    confirmButtonColor: '#3085d6'
                });
                return;
            }
            
            $.ajax({
                url: '@Url.Action("CreateAjax", "Huespedes")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response.success) {
                        Swal.fire({
                            title: '¡Éxito!',
                            text: 'Huésped creado correctamente',
                            icon: 'success',
                            confirmButtonColor: '#3085d6'
                        }).then(() => {
                            // Limpiar el formulario
                            form.reset();
                            
                            // Cerrar el modal
                            $('#modalNuevoHuesped').modal('hide');
                            
                            // Actualizar únicamente la lista de huéspedes disponibles una sola vez
                            $.get('@Url.Action("GetHuespedes", "Reservas")', function(data) {
                                const huespedSelect = $('#huespedes-disponibles');
                                huespedSelect.empty();
                                
                                // Agregar los huéspedes existentes
                                data.forEach(function(huesped) {
                                    huespedSelect.append(new Option(huesped.text, huesped.value));
                                });
                            });
                        });
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: response.message || 'Error al crear el huésped',
                            icon: 'error',
                            confirmButtonColor: '#3085d6'
                        });
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'Error al procesar la solicitud: ' + error,
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                    });
                }
            });
        }

        // Limpiar formularios cuando se cierren los modales
        $('#modalNuevoCliente').on('hidden.bs.modal', function () {
            document.getElementById('formNuevoCliente').reset();
        });

        $('#modalNuevoHuesped').on('hidden.bs.modal', function () {
            document.getElementById('formNuevoHuesped').reset();
        });

        // Agregar estas funciones en tu script
        function calcularPrecioTotal() {
            // Obtener precio de la habitación
            const habitacionId = $('#habitacionSelect').val();
            const preciosHabitaciones = @Html.Raw(Json.Serialize(ViewBag.HabitacionesPrecios));
            const precioHabitacion = parseFloat(preciosHabitaciones[habitacionId]) || 0;
            console.log('Precio habitación por día:', precioHabitacion);
            
            // Calcular días
            const fechaInicio = new Date($('#FechaInicio').val());
            const fechaFin = new Date($('#FechaFin').val());
            
            if (fechaInicio && fechaFin && fechaInicio <= fechaFin) {
                const diffTime = Math.abs(fechaFin - fechaInicio);
                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) || 1;
                console.log('Número de días:', diffDays);
                
                // Calcular precio por días
                const precioHabitacionTotal = precioHabitacion * diffDays;
                console.log('Precio total habitación:', precioHabitacionTotal);
                
                // Sumar servicios seleccionados
                let precioServicios = 0;
                $('.servicio-checkbox:checked').each(function() {
                    precioServicios += parseFloat($(this).data('precio')) || 0;
                });
                console.log('Precio servicios:', precioServicios);
                
                // Obtener anticipo
                const anticipo = parseFloat($('#Anticipo').val()) || 0;
                console.log('Anticipo:', anticipo);
                
                // Calcular total
                const precioTotal = precioHabitacionTotal + precioServicios;
                console.log('Precio total:', precioTotal);
                
                // Actualizar campos
                $('#PrecioTotal').val(precioTotal.toFixed(2));
                
                // Calcular y mostrar el saldo
                const saldo = precioTotal - anticipo;
                $('#Saldo').val(saldo.toFixed(2));
            }
        }

        // Agregar eventos para recalcular
        $(document).ready(function() {
            $('#habitacionSelect').change(calcularPrecioTotal);
            $('#FechaInicio, #FechaFin').change(calcularPrecioTotal);
            $('#Anticipo').on('input', calcularPrecioTotal);
            $('.servicio-checkbox').change(calcularPrecioTotal);
        });
    </script>
</body>
</html>

<style>
.huespedes-box {
    border: 2px solid #f1f4f8;
    border-radius: 8px;
    padding: 1rem;
    height: 180px; /* Reducido de 212px a 180px */
    margin-bottom: 1rem;
}

.btn-link.text-success:hover {
    color: #198754 !important;
    transform: scale(1.1);
    transition: all 0.2s;
}

#filtroHuespedes {
    border: 1px solid #ced4da;
    border-radius: 4px;
    padding: 0.25rem 0.5rem;
    font-size: 0.85rem;
}

#filtroHuespedes:focus {
    border-color: #1e3d59;
    box-shadow: 0 0 0 0.2rem rgba(30, 61, 89, 0.25);
}

.huespedes-box select {
    height: 130px !important; /* Reducido de 162px a 130px */
    border: none !important;
    padding: 0 !important;
    overflow-y: auto;
}
</style>